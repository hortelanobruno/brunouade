/*
 * PanelNewArt.java
 *
 * Created on 22 de mayo de 2008, 22:44
 */

package Paneles;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import controladores.ControladorPanelNewArt;
import VO.ArticuloHogarVO;
import VO.ArticuloRopaVO;
import Varios.Constantes;
import Varios.XMLArticulo;
import Varios.XMLWrapper;
import Vistas.VistaNewArt;
import Exceptions.ExistingProductException;
import GUI.Dialogo3Opciones;
import GUI.FileChooser;
import GUI.MenuPrincipal;

/**
 * 
 * @author Administrador
 */
public class PanelNewArt extends javax.swing.JPanel {

	/** Creates new form PanelNewArt */
	private static final long serialVersionUID = 1L;

	private MenuPrincipal ref;
	private XMLArticulo articuloXML;
	private VistaNewArt vistaNewArt;
	private boolean cargarTable;
	private String urlXML = null;

	public PanelNewArt(MenuPrincipal m, VistaNewArt vista) {
		initComponents();
		this.ref = m;
		this.vistaNewArt = vista;
		this.buttonGuardar.setEnabled(false);
	}


	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jScrollPane2 = new javax.swing.JScrollPane();
		tableArticulo = new javax.swing.JTable();
		jLabel1 = new javax.swing.JLabel();
		buttonCargarXML = new javax.swing.JButton();
		buttonGuardar = new javax.swing.JButton();

		tableArticulo.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] {}, new String[] { "Atributo", "Valor" }) {
			private static final long serialVersionUID = 1L;

			Class[] types = new Class[] { java.lang.String.class,
					java.lang.String.class };

			boolean[] canEdit = new boolean[] { false, false };

			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		tableArticulo.getTableHeader().setResizingAllowed(false);
		tableArticulo.getTableHeader().setReorderingAllowed(false);
		jScrollPane2.setViewportView(tableArticulo);

		jLabel1.setText("Nuevo Articulo");

		buttonCargarXML.setText("Cargar Articulo");
		buttonCargarXML.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonCargarXMLActionPerformed(evt);
			}
		});

		buttonGuardar.setText("Guardar");
		buttonGuardar.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonGuardarActionPerformed(evt);
			}
		});

		org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(
				this);
		this.setLayout(layout);
		layout
				.setHorizontalGroup(layout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(
								layout
										.createSequentialGroup()
										.add(35, 35, 35)
										.add(
												layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.LEADING)
														.add(
																layout
																		.createSequentialGroup()
																		.add(
																				buttonCargarXML)
																		.addPreferredGap(
																				org.jdesktop.layout.LayoutStyle.RELATED,
																				156,
																				Short.MAX_VALUE)
																		.add(
																				buttonGuardar))
														.add(
																jScrollPane2,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																332,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
										.addContainerGap(
												672,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
						.add(
								layout.createSequentialGroup().add(125, 125,
										125).add(jLabel1).addContainerGap(844,
										Short.MAX_VALUE)));
		layout
				.setVerticalGroup(layout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(
								layout
										.createSequentialGroup()
										.add(37, 37, 37)
										.add(jLabel1)
										.add(39, 39, 39)
										.add(
												jScrollPane2,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												182, Short.MAX_VALUE)
										.add(50, 50, 50)
										.add(
												layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.BASELINE)
														.add(buttonCargarXML)
														.add(buttonGuardar))
										.add(104, 104, 104)));
	}// </editor-fold>

	private void buttonCargarXMLActionPerformed(java.awt.event.ActionEvent evt) {
		// Cargar XML
		chooser = new FileChooser(ref, true, ref.getDefaltXmlPath());
		urlXML = chooser.getPath();

		if (urlXML == null) {
			JOptionPane.showMessageDialog(this,
					"Debe ingresar la ubicacion del archivo XML.\n",
					Constantes.APPLICATION_NAME, JOptionPane.ERROR_MESSAGE);
		} else {
			// Cargar los table
			((ControladorPanelNewArt) vistaNewArt.getControlador()).doCargarXML(true);
		}
	}

	private void buttonGuardarActionPerformed(java.awt.event.ActionEvent evt) {
		// Guardar Articulo
		((ControladorPanelNewArt) vistaNewArt.getControlador()).doCargarXML(false);
	}

	public void update() {
		if(cargarTable){
			//cargar articulo
			XMLWrapper xml = new XMLWrapper();
			articuloXML = (XMLArticulo) xml.parseXMLArticulo(urlXML);
			vaciarTabla();
			cargarTable(articuloXML);
			ref.getJTextArea1().append("Articulo Cargado\n");
			this.buttonGuardar.setEnabled(true);
			this.buttonCargarXML.setEnabled(false);
		}else{
			//persiste articulo
			
			if(((DefaultTableModel)tableArticulo.getModel()).getValueAt(0, 1).equals("Ropa")){
				//es un articulo ropa
				ArticuloRopaVO articulo = crearArticuloRopaVO();
				try
				{
					((ControladorPanelNewArt)vistaNewArt.getControlador()).doGuardarArticuloRopa(articulo);
				}
				catch(ExistingProductException e)
				{
					JOptionPane.showMessageDialog(this, e.getMessage(),Constantes.APPLICATION_NAME,JOptionPane.ERROR_MESSAGE);
				}
			}else{
				//es un articulo hogar
				ArticuloHogarVO articulo = crearArticuloHogarVO();
				try
				{
					((ControladorPanelNewArt)vistaNewArt.getControlador()).doGuardarArticuloHogar(articulo);
				}
				catch(ExistingProductException e)
				{
					JOptionPane.showMessageDialog(this, e.getMessage(),Constantes.APPLICATION_NAME,JOptionPane.ERROR_MESSAGE);
				}
			}
			vaciarTabla();
			ref.getJTextArea1().append("Articulo Guardado\n");
			this.buttonCargarXML.setEnabled(true);
			this.buttonGuardar.setEnabled(false);
			new Dialogo3Opciones("Operacion concretada", this.ref).setVisible(true);
			
		}
		
	}
	
	public void vaciarTabla(){
		((DefaultTableModel)tableArticulo.getModel()).getDataVector().removeAllElements();
	}

	public ArticuloRopaVO crearArticuloRopaVO(){
		ArticuloRopaVO art = new ArticuloRopaVO();
		art.setCodigo(Long.parseLong(((DefaultTableModel)tableArticulo.getModel()).getValueAt(1, 1).toString()));
		art.setDescripcion(((DefaultTableModel)tableArticulo.getModel()).getValueAt(2, 1).toString());
		art.setPrecio(Float.parseFloat(((DefaultTableModel)tableArticulo.getModel()).getValueAt(3, 1).toString()));
		art.setSeccion(((DefaultTableModel)tableArticulo.getModel()).getValueAt(4, 1).toString());
		art.setColor(((DefaultTableModel)tableArticulo.getModel()).getValueAt(5, 1).toString());
		art.setLinea(((DefaultTableModel)tableArticulo.getModel()).getValueAt(6, 1).toString());
		art.setCantidad(Integer.parseInt(((DefaultTableModel)tableArticulo.getModel()).getValueAt(7, 1).toString()));
		art.setTalle(((DefaultTableModel)tableArticulo.getModel()).getValueAt(8, 1).toString());
		art.setOrigen(((DefaultTableModel)tableArticulo.getModel()).getValueAt(9, 1).toString());
		return art;
	}
	
	public ArticuloHogarVO crearArticuloHogarVO(){
		ArticuloHogarVO art = new ArticuloHogarVO();
		art.setCodigo(Long.parseLong(((DefaultTableModel)tableArticulo.getModel()).getValueAt(1, 1).toString()));
		art.setDescripcion(((DefaultTableModel)tableArticulo.getModel()).getValueAt(2, 1).toString());
		art.setPrecio(Float.parseFloat(((DefaultTableModel)tableArticulo.getModel()).getValueAt(3, 1).toString()));
		art.setSeccion(((DefaultTableModel)tableArticulo.getModel()).getValueAt(4, 1).toString());
		art.setColor(((DefaultTableModel)tableArticulo.getModel()).getValueAt(5, 1).toString());
		art.setLinea(((DefaultTableModel)tableArticulo.getModel()).getValueAt(6, 1).toString());
		art.setCantidad(Integer.parseInt(((DefaultTableModel)tableArticulo.getModel()).getValueAt(7, 1).toString()));
		art.setDetalles(((DefaultTableModel)tableArticulo.getModel()).getValueAt(8, 1).toString());
		art.setComposicion(((DefaultTableModel)tableArticulo.getModel()).getValueAt(9, 1).toString());
		art.setCategoria(((DefaultTableModel)tableArticulo.getModel()).getValueAt(10, 1).toString());
		art.setMedidas(((DefaultTableModel)tableArticulo.getModel()).getValueAt(11, 1).toString());
		return art;
	}
	
	public void cargarTable(XMLArticulo art) {
		if(art.getCategoria().equals("")){
			//Es una articulo ropa
			((DefaultTableModel)tableArticulo.getModel()).addRow(new Object[]{"Articlo","Ropa"});
			((DefaultTableModel)tableArticulo.getModel()).addRow(new Object[]{"Codigo",art.getCodigo()});
			((DefaultTableModel)tableArticulo.getModel()).addRow(new Object[]{"Descripcion",art.getDescripcion()});
			((DefaultTableModel)tableArticulo.getModel()).addRow(new Object[]{"Precio",art.getPrecio()});
			((DefaultTableModel)tableArticulo.getModel()).addRow(new Object[]{"Seccion",art.getSeccion()});
			((DefaultTableModel)tableArticulo.getModel()).addRow(new Object[]{"Color",art.getColor()});
			((DefaultTableModel)tableArticulo.getModel()).addRow(new Object[]{"Linea",art.getLinea()});
			((DefaultTableModel)tableArticulo.getModel()).addRow(new Object[]{"Cantidad",art.getCantidad()});
			((DefaultTableModel)tableArticulo.getModel()).addRow(new Object[]{"Talle",art.getTalle()});
			((DefaultTableModel)tableArticulo.getModel()).addRow(new Object[]{"Origen",art.getOrigen()});
		}else {
			//Es un articulo hogar
			((DefaultTableModel)tableArticulo.getModel()).addRow(new Object[]{"Articulo","Hogar"});
			((DefaultTableModel)tableArticulo.getModel()).addRow(new Object[]{"Codigo",art.getCodigo()});
			((DefaultTableModel)tableArticulo.getModel()).addRow(new Object[]{"Descripcion",art.getDescripcion()});
			((DefaultTableModel)tableArticulo.getModel()).addRow(new Object[]{"Precio",art.getPrecio()});
			((DefaultTableModel)tableArticulo.getModel()).addRow(new Object[]{"Seccion",art.getSeccion()});
			((DefaultTableModel)tableArticulo.getModel()).addRow(new Object[]{"Color",art.getColor()});
			((DefaultTableModel)tableArticulo.getModel()).addRow(new Object[]{"Linea",art.getLinea()});
			((DefaultTableModel)tableArticulo.getModel()).addRow(new Object[]{"Cantidad",art.getCantidad()});
			((DefaultTableModel)tableArticulo.getModel()).addRow(new Object[]{"Detalles",art.getDetalles()});
			((DefaultTableModel)tableArticulo.getModel()).addRow(new Object[]{"Composicion",art.getComposicion()});
			((DefaultTableModel)tableArticulo.getModel()).addRow(new Object[]{"Categoria",art.getCategoria()});
			((DefaultTableModel)tableArticulo.getModel()).addRow(new Object[]{"Medidas",art.getMedidas()});
		}
	}


	// Variables declaration - do not modify
	private javax.swing.JButton buttonCargarXML;

	private javax.swing.JButton buttonGuardar;

	private javax.swing.JLabel jLabel1;

	private javax.swing.JScrollPane jScrollPane2;

	private javax.swing.JTable tableArticulo;

	private FileChooser chooser;

	// End of variables declaration

	public VistaNewArt getVistaNewArt() {
		return vistaNewArt;
	}

	public void setVistaNewArt(VistaNewArt vistaNewArt) {
		this.vistaNewArt = vistaNewArt;
	}

	public boolean isCargarTable() {
		return cargarTable;
	}

	public void setCargarTable(boolean cargarTable) {
		this.cargarTable = cargarTable;
	}

}
