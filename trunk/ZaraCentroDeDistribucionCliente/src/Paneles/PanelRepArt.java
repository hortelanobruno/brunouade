/*
 * PanelRepArt.java
 *
 * Created on 22 de mayo de 2008, 22:55
 */

package Paneles;

import java.util.Iterator;
import java.util.Vector;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import controladores.ControladorPanelRepArt;
import controladores.ControladorPanelSolDis;
import VO.ArticuloHeaderVO;
import VO.SolicitudDistribucionVO;
import VO.SolicitudEnvioVO;
import VO.SolicitudFabricaVO;
import Varios.Constantes;
import Varios.XMLWrapper;
import Vistas.VistaRepArt;
import Vistas.VistaSolDis;
import GUI.Dialogo3Opciones;
import GUI.FileChooser;
import GUI.MenuPrincipal;

/**
 * 
 * @author Administrador
 */
public class PanelRepArt extends javax.swing.JPanel {

	/** Creates new form PanelRepArt */
	private static final long serialVersionUID = 1L;
	private String urlXML;
	private MenuPrincipal ref;
	private SolicitudFabricaVO solFabVO;
	private VistaRepArt vistaRepArt;
	private boolean cargarTable;
	private FileChooser chooser;

	public PanelRepArt(MenuPrincipal m, VistaRepArt vista) {
		initComponents();
		this.ref = m;
		this.vistaRepArt = vista;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		tableArticulosFabrica = new javax.swing.JTable();
		buttonCargarXML = new javax.swing.JButton();
		buttonGuardar = new javax.swing.JButton();

		jLabel1.setText("Articulos recibidos de fabrica");

		tableArticulosFabrica.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] {

				}, new String[] {"Solicitud", "Fabrica","Codigo", "Descripcion", "Cantidad Pedida",
						"Cantidad Recibida" }) {
							private static final long serialVersionUID = 1L;
			Class[] types = new Class[] { java.lang.Integer.class,java.lang.String.class,java.lang.Integer.class,
					java.lang.String.class, java.lang.Integer.class,
					java.lang.Integer.class };

			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}
		});
		jScrollPane1.setViewportView(tableArticulosFabrica);

		buttonCargarXML.setText("Cargar XMl");
		buttonCargarXML.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonCargarXMLActionPerformed(evt);
			}
		});

		buttonGuardar.setText("Guardar");
		buttonGuardar.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonGuardarActionPerformed(evt);
			}
		});

		org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(
				this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				org.jdesktop.layout.GroupLayout.LEADING).add(
				layout.createSequentialGroup().add(25, 25, 25).add(
						layout.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING).add(
								layout.createSequentialGroup().add(
										buttonCargarXML).add(74, 74, 74).add(
										buttonGuardar)).add(jScrollPane1,
								org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
								org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
								org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
								.add(jLabel1)).addContainerGap(562,
						Short.MAX_VALUE)));
		layout
				.setVerticalGroup(layout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(
								layout
										.createSequentialGroup()
										.add(28, 28, 28)
										.add(jLabel1)
										.add(38, 38, 38)
										.add(
												jScrollPane1,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
												154,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
										.add(63, 63, 63)
										.add(
												layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.BASELINE)
														.add(buttonCargarXML)
														.add(buttonGuardar))
										.addContainerGap(129, Short.MAX_VALUE)));
	}// </editor-fold>

	private void buttonCargarXMLActionPerformed(java.awt.event.ActionEvent evt) {
		// Carga archivo XML
		chooser = new FileChooser(ref, true, ref.getDefaltXmlPath());
		urlXML = chooser.getPath();
		if (urlXML.equals(""))
			JOptionPane.showMessageDialog(this,
					"Debe ingresar la ubicacion del archivo XML.\n",
					Constantes.APPLICATION_NAME, JOptionPane.ERROR_MESSAGE);
		else {
			// Cargar los table
			((ControladorPanelRepArt) vistaRepArt.getControlador()).doCargarXML(true);
		}
	}

	private void buttonGuardarActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}
	
	"Fabrica","Codigo", "Descripcion", "Cantidad Pedida",
	"Cantidad Recibida"
	private void cargarTable(SolicitudFabricaVO solFabVO,Vector<Long> codigos, Vector<String> descripciones,Vector<Integer> stocks) {
		Iterator iterador = (Iterator) solFabVO.getArticulo().iterator();
		for (int i = 0; i < solFabVO.getArticulo().size(); i++) {
			((DefaultTableModel) tableArticulosFabrica.getModel())
					.addRow(new Object[] {
							"Solicitud Numero " + solFabVO.getNumero(),
							solFabVO.getFabrica().getNombreFabrica(),
							codigos.elementAt(i).toString(),
							descripciones.elementAt(i).toString(),
							((ArticuloHeaderVO) iterador.next()).getCantidad(),
							stocks.elementAt(i).toString(), 0 });
		}
	}

	public void update() {
		//aca hay que poner las llamadas a la business delegate
		if(cargarTable){
			XMLWrapper xml = new XMLWrapper();
			solFabVO = (SolicitudFabricaVO) xml.parseXMLSF(urlXML);
			Vector<Long> codigos = new Vector<Long>();
			Iterator arts = (Iterator) solFabVO.getArticulo().iterator();
			while (arts.hasNext()) {
				codigos.add(((ArticuloHeaderVO) arts.next()).getCodigo());
			}
			Vector<String> descripciones = this.ref.getVistaSolDis().getModelo().getDescripciones(codigos);
			Vector<Integer> stocks = this.ref.getVistaSolDis().getModelo().getStocks(codigos);
			cargarTable(solFabVO, codigos, descripciones, stocks);
			ref.getJTextArea1().append("Archivo Cargado\n");
		}else{
			//Falta generar las solicitudes
			SolicitudEnvioVO solEnvio = (SolicitudEnvioVO) generarSolEnvios();
			SolicitudFabricaVO solFab = (SolicitudFabricaVO) generarSolFab();
			
			((ControladorPanelSolDis)vistaSolDis.getControlador()).doGuardarSolicitud(solDisVO);
			((ControladorPanelSolDis)vistaSolDis.getControlador()).doGuardarSolicitudEnvios(solEnvio);
			((ControladorPanelSolDis)vistaSolDis.getControlador()).doGuardarSolicitudFabricacion(solFab);
			vaciarTabla();
			ref.getJTextArea1().append("Solicitudes Guardadas\n");
			new Dialogo3Opciones("Operacion concretada", this.ref).setVisible(true);
		}
	}

	// Variables declaration - do not modify
	private javax.swing.JButton buttonCargarXML;

	private javax.swing.JButton buttonGuardar;

	private javax.swing.JLabel jLabel1;

	private javax.swing.JScrollPane jScrollPane1;

	private javax.swing.JTable tableArticulosFabrica;

	// End of variables declaration

	public MenuPrincipal getRef() {
		return ref;
	}

	public void setRef(MenuPrincipal ref) {
		this.ref = ref;
	}

	public VistaRepArt getVistaRepArt() {
		return vistaRepArt;
	}

	public void setVistaRepArt(VistaRepArt vistaRepArt) {
		this.vistaRepArt = vistaRepArt;
	}

	public boolean isCargarTable() {
		return cargarTable;
	}

	public void setCargarTable(boolean cargarTable) {
		this.cargarTable = cargarTable;
	}

}
