/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package test;

import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.net.Socket;

/**
 *
 * @author bruno
 */
public class GeneratorFlow {

    public static void main(String args[]) {
        try {
            Socket soc = new Socket();
            soc.bind(new InetSocketAddress("10.0.0.210", 0));
            soc.connect(new InetSocketAddress("10.0.0.39", 80), 30 * 1000);

            InputStream is = soc.getInputStream();
            OutputStream os = soc.getOutputStream();

            String hexa = "442533422e2532392537442543332539422531332533422537422543322542352531432530302543322539442543332542376e6425433225393125433325424270254332253934254333254230254332253842253043253234352530412543332541382543332541412d6525433325393025433225383225433325394225354225433225393764782543332539432535452531352543332541442543332538332543322542382537442543332538342543322541302533432530332b253137675f6c3925433225414325433325414325433325384425334125433225413625433325393025433225423225334625313025313125313425433325413838376225433225423325433225383325433225394225433225414255254332253945253141253346796e254333254238254333254143254332254244254332253938396e4e78254332253936792543332542312531362543332538332543332542332543322541372543322542432543332542352531432543322539372543322539332543322538302531332543332538342530454725433325383425433225394142254332254142254332254234254333253935462530432533422535442530316d2530372543322538352543322538362530322532382531342531352543322542457a772531386325433325413225433325413725433225393125354275254332254139254332253832717825433225413525314472254332254133422e2543322538362543322539374c6325304576253243562543332541422533432543332542354f254332253938254333253831253044254332254241615f254332253935254332254243253032254333254236253033325a25433325413525433325393266352543322538454f2543322542354267254333253941254333253944254333254230706d2543332538372543332542342d253032682543322539422543322539342543332538427a2543322539345a6cc253131592530452543332539446a2530462543322541352543322541452531465a25433325383953253238253242792543322541412543322542326c253232254333253844304238254332254135332535432534304757254332253943253143762543332538422530302543322539362543332538462543332538382543332541442543332538322543322542372543322538412532375425433325414438254333254141254333253841254332253843254332253832254333254141442543322539452543322541456c25433225423825433325383525433325384525313125323525433225393351532543322541442543322538432543332542427265254333254236254333254239253046372543322542322543322539387074253130254332253945254333254244254332253930372543322538362530382543332538392543322538382532372543332539432531322543332541412543322539";
            os.write(hexToBytes(hexa));
            os.flush();
            while (true) {

                Thread.sleep(1000);
            }

//            soc.close();

        } catch (Exception ex) {
            ex.printStackTrace();

        }
    }

    public static byte[] hexToBytes(char[] hex) {
        int length = hex.length / 2;
        byte[] raw = new byte[length];
        for (int i = 0; i < length; i++) {
            int high = Character.digit(hex[i * 2], 16);
            int low = Character.digit(hex[i * 2 + 1], 16);
            int value = (high << 4) | low;
            if (value > 127) {
                value -= 256;
            }
            raw[i] = (byte) value;
        }
        return raw;
    }

    /**
     * Convierte el string con valores hexas en array de bytes
     *
     * @param hex
     * @return
     */
    public static byte[] hexToBytes(String hex) {
        return hexToBytes(hex.toCharArray());
    }
}
